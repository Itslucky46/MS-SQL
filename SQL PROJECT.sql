USE ASSIGNMENTS

-- 1. What are the details of all cars purchased in the year 2022?

select c.make,c.type,c.style,c.cost_$ from cars c
join sales s on c.car_id=s.car_id
where year(s.purchase_date)=2022;

-- 2. What is the total number of cars sold by each salesperson?

select sa.name,count(s.car_id) as "Cars Sold" from salespersons sa
join sales s on sa.salesman_id=s.salesman_id
group by sa.name

-- 3. What is the total revenue generated by each salesperson?

select sa.name,sum(c.cost_$) as"Revenue" from cars c
join sales s on c.car_id=s.car_id
join salespersons sa on sa.salesman_id=s.salesman_id
group by sa.name
order by "Revenue" desc;

-- 4. What are the details of the cars sold by each salesperson?

select sa.name,c.make,c.type,c.style,c.cost_$ from cars c
join sales s on c.car_id=s.car_id
join salespersons sa on sa.salesman_id=s.salesman_id;

-- 5. What is the total revenue generated by each car type?

select c.type,sum(c.cost_$) as"Revenue" from cars c
join sales s on c.car_id=s.car_id
join salespersons sa on sa.salesman_id=s.salesman_id
group by c.type
order by "Revenue" desc;

-- 6. What are the details of the cars sold in the year 2021 by salesperson 'Emily Wong'?

select c.make,c.type,c.style,c.cost_$ from cars c
join sales s on c.car_id=s.car_id
join salespersons sa on sa.salesman_id=s.salesman_id
where year(s.purchase_date)=2021 and sa.name like 'Emily Wong';

-- 7. What is the total revenue generated by the sales of hatchback cars?

select style,sum(cost_$) as "Revenue" from cars c
join sales s on c.car_id=s.car_id
where style like 'Hatchback'
group by style

-- 8. What is the total revenue generated by the sales of SUV cars in the year 2022?

SELECT SUM(c.cost_$) AS total_revenue_generated
FROM cars c
JOIN sales s ON c.car_id = s.car_id
WHERE c.style = 'SUV' AND YEAR(s.purchase_date) = 2022;

-- 9. What is the name and city of the salesperson who sold the most number of cars in the year 2023?

select Top(1) sa.name,sa.city,COUNT(s.car_id) as "Cars Sold" from salespersons sa
join sales s on sa.salesman_id=s.salesman_id
where year(s.purchase_date)=2023
group by sa.name,sa.city
order by "Cars Sold" desc;

-- 10. What is the name and age of the salesperson who generated the highest revenue in the year 2022?  */ 

SELECT Top(1) sa.name,sa.age
FROM cars c
JOIN sales s ON c.car_id = s.car_id
join salespersons sa on sa.salesman_id=s.salesman_id
WHERE YEAR(s.purchase_date) = 2022
group by sa.name,sa.age
order by SUM(c.cost_$) desc;


USE Assignments

SELECT * FROM Players
SELECT * FROM Teams
SELECT * FROM Matches

/* 1. What are the names of the players whose salary is greater than 100,000? */
 SELECT player_name
 FROM Players
 WHERE salary > 100000;

/* 2. What is the team name of the player with player_id = 3? */
SELECT team_name
FROM Teams
WHERE team_id = (
    SELECT team_id
    FROM Players
    WHERE player_id = 3);

	select team_name from Teams
	where team_id = ( select team_id from players
	where player_id=3);


/* 3. What is the total number of players in each team? */
SELECT team_name, COUNT(*) AS total_players
FROM Teams
JOIN Players ON Teams.team_id = Players.team_id
GROUP BY team_name;


/* 4. What is the team name and captain name of the team with team_id = 2? */
SELECT team_name, player_name AS captain_name
FROM Teams
JOIN Players ON Teams.captain_id = Players.player_id
WHERE Teams.team_id = 2;


/* 5. What are the player names and their roles in the team with team_id = 1? */

SELECT player_name, role
FROM Players
WHERE team_id = 1;


/* 6. What are the team names and the number of matches they have won? */

SELECT Teams.team_name, COUNT(*) AS matches_won
FROM Teams
JOIN Matches ON Teams.team_id = Matches.winner_id
GROUP BY Teams.team_name;

/* 7. What is the average salary of players in the teams with country 'USA'? */

SELECT AVG(salary) AS average_salary
FROM Players
JOIN Teams ON Players.team_id = Teams.team_id
WHERE Teams.country = 'USA';

/* 8. Which team won the most matches? */

SELECT * FROM Players
SELECT * FROM Teams
SELECT * FROM Matches


select t.team_name,m.score_team1,m.score_team2 from Teams t
inner join Matches m
on (t.team_id=m.team1_id)
group by t.team_name,m.score_team1,m.score_team2
order by sum(score_team1+score_team2) desc



/* 9. What are the team names and the number of players in each team whose salary is greater than 100,000? */

SELECT Teams.team_name, COUNT(*) AS num_players
FROM Teams
JOIN Players ON Teams.team_id = Players.team_id
WHERE Players.salary > 100000
GROUP BY Teams.team_name;

SELECT Teams.team_name, COUNT(player_id) AS num_players
FROM Teams
JOIN Players ON Teams.team_id = Players.team_id
WHERE Players.salary > 100000
GROUP BY Teams.team_name;

/* 10. What is the date and the score of the match with match_id = 3? */

SELECT match_date, score_team1, score_team2
FROM Matches
WHERE match_id = 3;


--1. What are the names of all the countries in the country table?

 select country_name from Country

-- 2. What is the total number of customers in the customers table?

select count(*) as "Total Customers" from Customers

-- 3. What is the average age of customers who can receive marketing emails (can_email is set to 'yes')?

select avg(age) "Avg Age" from customers
where can_email='yes'

-- 4. How many orders were made by customers aged 30 or older?

select Count(*) "Toatal orders" from orders o
inner Join customers c
on(o.customer_id=c.customer_id)
where age>=30

-- 5. What is the total revenue generated by each product category?

select p.category,Sum(p.price)as "Revenue" from products p
inner join baskets b on(p.product_id=b.product_id)
inner join orders o on(o.order_id=b.order_id)
group by p.category

-- 6. What is the average price of products in the 'food' category?

select avg(p.price)as "Avg price" from products p
inner join baskets b on(p.product_id=b.product_id)
inner join orders o on(o.order_id=b.order_id)
where category='food'
group by p.category



-- 7. How many orders were made in each sales channel (sales_channel column) in the orders table?


select  o.sales_channel,count(o.order_id)as "Total Oredrs" from orders o
inner join baskets b on(b.order_id=o.order_id)
inner join customers c on(c.customer_id=o.customer_id)
group by o.sales_channel


-- 8.What is the date of the latest order made by a customer who can receive marketing emails?


select max(o.date_shop)as "Latest Order Date" from orders o
inner join customers c on o.customer_id=c.customer_id
where can_email='yes'

-- 9. What is the name of the country with the highest number of orders?


select top(1) c.country_name, COUNT(o.order_id) as " highest orders" from country c
inner join orders o on c.country_id=o.country_id
group by c.country_name
order by COUNT(o.order_id)desc


-- 10. What is the average age of customers who made orders in the 'vitamins' product category?

select avg(c.age)"Avg Age" from customers c
inner join orders o on c.customer_id=o.customer_id
inner join  baskets b on o.order_id=b.order_id
inner join products p on p.product_id=b.product_id
where p.category='vitamins'

-- 1. What are the names of all the customers who live in New York?

select concat(FirstName,' ',LastName ) As "Full Name"  from customers2
where city ='New York'

-- 2. What is the total number of accounts in the Accounts table?

select count(accountID) As "Total Accounts" from accounts

-- 3. What is the total balance of all checking accounts?


select Sum(balance)"Total balance" from Accounts
where accounttype='Checking'

-- 4. What is the total balance of all accounts associated with customers who live in Los Angeles?

select Sum(balance)"Total balance" from Accounts a
inner join Customers2 c on c.CustomerID=a.CustomerID
where c.City='Los Angeles'

-- 5. Which branch has the highest average account balance?

select Top(1) b.BranchName,round(avg(a.balance),0) as "Total balance" from Accounts a
inner join Branches b on b.BranchID=a.BranchID
group by b.Branchname
order by "Total balance" desc

-- 6. Which customer has the highest current balance in their accounts?

select Top(1) CONCAT(c.FirstName,' ',c.LastName) as "Full name" ,sum(a.Balance)"Highest Balance" from Customers2 c
inner join Accounts a on (c.CustomerID=a.CustomerID)
group by CONCAT(c.FirstName,' ',c.LastName)
order by "Highest Balance" desc

-- 7. Which customer has made the most transactions in the Transactions table?

select Top(1) CONCAT(c.FirstName,' ',c.LastName) as "Full name" ,sum(a.Balance)"Highest Balance" from Customers2 c
inner join Accounts a on (c.CustomerID=a.CustomerID)
group by CONCAT(c.FirstName,' ',c.LastName)
order by "Highest Balance" desc

-- 8.Which branch has the highest total balance across all of its accounts?

select top(1) BranchName,SUM(a.Balance) as "Highest Total Balance" from Branches b
inner Join Accounts a on(b.BranchID=a.BranchID)
group by BranchName
order by SUM(a.Balance) desc

-- 9. Which customer has the highest total balance across all of their accounts, including savings and checking accounts?

select Top(2)  BranchName,count(TransactionID) as "Highest Transaction" from Transactions t
inner join Accounts a on(t.AccountID=a.AccountID)
inner join Branches b on (b.BranchID=a.BranchID)
group by BranchName
order by count(TransactionID) desc 

-- 10. Which branch has the highest number of transactions in the Transactions table?

select Top(2)  BranchName,count(TransactionID) as "Highest Transaction" from Transactions t
inner join Accounts a on(t.AccountID=a.AccountID)
inner join Branches b on (b.BranchID=a.BranchID)
group by BranchName
order by count(TransactionID) desc 

-- 1. How many pubs are located in each country??

select  country,Count(pub_name) as "Located" from pubs p
group By country

-- 2. What is the total sales amount for each pub, including the beverage price and quantity sold?

select pub_name,sum(b.price_per_unit*s.quantity) as "Revenue" from pubs p
inner join sales2 s on p.pub_id=s.pub_id
inner join beverages b on b.beverage_id=s.beverage_id
group by pub_name
order by "Revenue" desc;

-- 3. Which pub has the highest average rating?

select pub_name,round(avg(rating),2) as "Avg Rating" from pubs p
inner join ratings r 
on(p.pub_id=r.pub_id)
group by pub_name
order by "Avg Rating" desc;

-- 4. What are the top 5 beverages by sales quantity across all pubs?


select Top(5) beverage_name,sum(quantity) as "Sales Quantity" from beverages b
inner join sales2 s 
on (b.beverage_id=s.beverage_id)
group by beverage_name
order by "Sales Quantity" desc

-- 5. How many sales transactions occurred on each date?

select transaction_date,count(transaction_date)as"transactions" from sales2
group by transaction_date
order by "transactions" desc

-- 6. Find the name of someone that had cocktails and which pub they had it in.

SELECT r.customer_name, p.pub_name
FROM ratings r
JOIN pubs p ON r.pub_id = p.pub_id
JOIN beverages b ON r.pub_id = b.beverage_id
WHERE b.category = 'Cocktail';

-- 7. What is the average price per unit for each category of beverages, excluding the category 'Spirit'?

select category,round(avg(price_per_unit),2) as"Avg Price" from beverages
where category<>'Spirit'
group by category
order by "Avg Price" desc;

-- 8. Which pubs have a rating higher than the average rating of all pubs?

select p.Pub_name,r.rating from pubs p 
inner join ratings r 
on(p.pub_id=r.pub_id)
where r.rating>(select Avg(rating) from ratings )
order by rating desc

-- 9. What is the running total of sales amount for each pub, ordered by the transaction date?


select p.pub_name,s.transaction_date,sum(b.price_per_unit*s.quantity) as "Sales" from sales2 s
inner join pubs p on s.pub_id=p.pub_id
inner join beverages b on b.beverage_id=s.beverage_id
group by p.pub_name,s.transaction_date
order by s.transaction_date 

SELECT p.pub_name, s.transaction_date, SUM(b.price_per_unit * s.quantity)
OVER (PARTITION BY s.pub_id ORDER BY s.transaction_date) AS running_total
FROM sales2 s
JOIN pubs p ON p.pub_id = s.pub_id
JOIN beverages b ON b.beverage_id = s.beverage_id
ORDER BY s.transaction_date;

-- 10. For each country, what is the average price per unit of beverages in each category,
--and what is the overall average price per unit of beverages across all categories?

SELECT p.country, b.category, AVG(b.price_per_unit) AS average_price_per_unit
FROM pubs p
JOIN sales2 s ON p.pub_id = s.pub_id
JOIN beverages b ON b.beverage_id = s.beverage_id
GROUP BY p.country, b.category 
order by p.country


--11. For each pub, what is the percentage contribution of each category of beverages to the total sales amount, and what is the pub's overall sales amount?

select p.pub_name,b.category,sum(b.price_per_unit*s.quantity) as "Revenue" ,
(sum(b.price_per_unit*s.quantity)/
(select sum(b.price_per_unit*s.quantity) from sales2 s
inner join beverages b on b.beverage_id=s.beverage_id))*100 as "percentage contribution"
from pubs p
inner join sales2 s on p.pub_id=s.pub_id
inner join beverages b on b.beverage_id=s.beverage_id
group by p.pub_name,b.category


SELECT p.pub_name, b.category, SUM(b.price_per_unit * s.quantity) AS sales_amount,
       (SUM(b.price_per_unit * s.quantity) / 
        (SELECT SUM(b.price_per_unit * s.quantity) FROM sales2 s
		JOIN beverages b ON b.beverage_id = s.beverage_id)) * 100 AS percentage_contribution
FROM pubs p
JOIN sales2 s ON p.pub_id = s.pub_id
JOIN beverages b ON b.beverage_id = s.beverage_id
GROUP BY p.pub_name, b.category;




-- 1. How many transactions were completed during each marketing campaign?


select campaign_name,COUNT(tr.transaction_id) as "transaction" from  marketing_campaigns mc
inner join transactions2 tr on mc.product_id=tr.product_id
group by mc.campaign_name

-- 2. Which product had the highest sales quantity?

select Top(1) sc.product_name,sum(tr.quantity)as "Hieghest Sales Quantity" from sustainable_clothing sc
inner join transactions2 tr on sc.product_id=tr.product_id
group by sc.product_name
order by "Hieghest Sales Quantity" desc;

-- 3. What is the total revenue generated from each marketing campaign?

select campaign_name,sum(tr.quantity*sc.price) as "Revenue" from  marketing_campaigns mc
inner join transactions2 tr on mc.product_id=tr.product_id
inner join sustainable_clothing sc on sc.product_id=tr.product_id
group by mc.campaign_name

-- 4. What is the top-selling product category based on the total revenue generated?

select Top(1) sc.product_name,sum(tr.quantity*sc.price) as "Revenue" from  marketing_campaigns mc
inner join transactions2 tr on mc.product_id=tr.product_id
inner join sustainable_clothing sc on sc.product_id=tr.product_id
group by sc.product_name

-- 5. Which products had a higher quantity sold compared to the average quantity sold?

SELECT Top(1) sc.product_name,avg(tr.quantity)as "Avg quantity"
FROM sustainable_clothing AS sc
JOIN transactions2 AS tr 
ON (sc.product_id = tr.product_id)
group by sc.product_name
order by "Avg quantity" desc;

-- 6. What is the average revenue generated per day during the marketing campaigns?

SELECT mc.campaign_name, round(AVG(t.quantity * sc.price),2) AS average_revenue_per_day
FROM marketing_campaigns AS mc
JOIN transactions2 AS t ON mc.product_id = t.product_id
JOIN sustainable_clothing AS sc ON mc.product_id = sc.product_id
GROUP BY mc.campaign_name
order by average_revenue_per_day desc;

-- 7. What is the percentage contribution of each product to the total revenue?

select sc.product_name,sum(sc.price*tr.quantity) as "Revenue" ,round(sum(sc.price*tr.quantity)/
 (select sum(sc.price*tr.quantity) from transactions2 tr
 inner join sustainable_clothing sc on sc.product_id=tr.product_id)*100,2) as "Each Product Contribution"
from transactions2 tr
inner join sustainable_clothing sc 
on tr.product_id=sc.product_id
group by sc.product_name
order by "Each Product Contribution" desc;

-- 8. Compare the average quantity sold during marketing campaigns to outside the marketing campaigns

select 'Marketing Campaign' as Sales_channel, avg(tr.quantity)  as "Avg Qty Sold" from transactions2 tr
inner join sustainable_clothing sc on sc.product_id=tr.product_id
union
select 'Outside Marketing Campaign' as "Sales_channel", avg(tr.quantity) as "Avg Qty Sold" from transactions2 tr
inner join sustainable_clothing sc on sc.product_id=tr.product_id
where tr.product_id not in (select product_id from marketing_campaigns)

-- 9. Compare the revenue generated by products inside the marketing campaigns to outside the campaigns

select 'Inside Marketing Campaign' as Revenue,sum(tr.quantity*sc.price) as "Total Revenue" from transactions2 tr
inner join sustainable_clothing sc on (sc.product_id=tr.product_id)
where tr.product_id  in (select product_id from marketing_campaigns)
union
select 'Outside Marketing Campaign' as Revenue,sum(tr.quantity*sc.price) as "Total Revenue" from transactions2 tr
inner join sustainable_clothing sc on (sc.product_id=tr.product_id)
where tr.product_id not in (select product_id from marketing_campaigns)


---10. Rank the products by their average daily quantity sold

SELECT sc.product_name, SUM(t.quantity) / COUNT(DISTINCT t.purchase_date) AS average_daily_quantity
FROM sustainable_clothing AS sc
JOIN transactions2 AS t ON sc.product_id = t.product_id
GROUP BY sc.product_name
ORDER BY average_daily_quantity DESC;







